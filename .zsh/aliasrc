# Changing "ls" to "exa"
alias ls='exa -a --color=always --group-directories-first' # my preferred listing
alias la='exa -a --color=always --group-directories-first'  # all files and dirs
alias ll='exa -l --color=always --group-directories-first'  # long format
alias lt='exa -aT --color=always --group-directories-first' # tree listing

alias grep='grep --color=always'
alias sxiv='devour sxiv'

function cd() { builtin cd -- "$@" && { [ "$PS1" = "" ] || la; }; }

# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

export EDITOR=nvim

alias cls='clear'
alias clip='xclip -sel clip'

alias pacman-update='sudo pacman-mirrors --geoip'

alias zshrc='${=EDITOR} ~/.zshrc' # Quick access to the ~/.zshrc file
alias vrc='vim ~/.vimrc'

alias edit_aliases='${=EDITOR} ~/.zsh/aliasrc'

alias awe='code $HOME/.config/awesome'
alias kali='exec VBoxManage startvm kali'
alias cfg='/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME'
alias open='xdg-open'
alias remove_unused_dependencies='pacman -Qtdq && sudo pacman -Rns $(pacman -Qtdq)'

alias code='code-insiders'
alias vim='nvim'

[ -z "$NVM_DIR" ] && export NVM_DIR="$HOME/.nvm"
source /usr/share/nvm/nvm.sh
source /usr/share/nvm/bash_completion
source /usr/share/nvm/install-nvm-exec

alias glg="git log --graph --abbrev-commit --decorate --format=format:'%C(bold green)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold yellow)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"
alias clg="config log --graph --abbrev-commit --decorate --format=format:'%C(bold green)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold yellow)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"

# Function to show a markdown document in a browser
# Requires grip (pip install grip)
function md(){
    echo "Starting grip server"
    grip -b $1 
}

alias msfconsole="msfconsole -x \"db_connect postgres:toor@db/msf\""
alias quickftp="python -m pyftpdlib -w"
alias quickhttp="sudo python -m http.server 80"
